// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: user.sql

package db

import (
	"context"

	"github.com/google/uuid"
)

const createUser = `-- name: CreateUser :one
INSERT INTO users(
    id,
    username,
    password,
    fullname,
    gender,
    avt,
    lat,
    lng
) VALUES(
    $1, $2, $3, $4, $5, $6, $7, $8
) RETURNING fullname, gender, avt, lat, lng
`

type CreateUserParams struct {
	ID       uuid.UUID `json:"id"`
	Username string    `json:"username"`
	Password string    `json:"password"`
	Fullname string    `json:"fullname"`
	Gender   int32     `json:"gender"`
	Avt      string    `json:"avt"`
	Lat      float64   `json:"lat"`
	Lng      float64   `json:"lng"`
}

type CreateUserRow struct {
	Fullname string  `json:"fullname"`
	Gender   int32   `json:"gender"`
	Avt      string  `json:"avt"`
	Lat      float64 `json:"lat"`
	Lng      float64 `json:"lng"`
}

func (q *Queries) CreateUser(ctx context.Context, arg CreateUserParams) (CreateUserRow, error) {
	row := q.db.QueryRowContext(ctx, createUser,
		arg.ID,
		arg.Username,
		arg.Password,
		arg.Fullname,
		arg.Gender,
		arg.Avt,
		arg.Lat,
		arg.Lng,
	)
	var i CreateUserRow
	err := row.Scan(
		&i.Fullname,
		&i.Gender,
		&i.Avt,
		&i.Lat,
		&i.Lng,
	)
	return i, err
}

const getUser = `-- name: GetUser :one
SELECT id, username, password, fullname, gender, avt, lat, lng, created_at FROM users
WHERE username = $1 LIMIT 1
`

func (q *Queries) GetUser(ctx context.Context, username string) (User, error) {
	row := q.db.QueryRowContext(ctx, getUser, username)
	var i User
	err := row.Scan(
		&i.ID,
		&i.Username,
		&i.Password,
		&i.Fullname,
		&i.Gender,
		&i.Avt,
		&i.Lat,
		&i.Lng,
		&i.CreatedAt,
	)
	return i, err
}
